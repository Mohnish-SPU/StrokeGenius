// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MyoDeviceListener.proto

package StrokeGeniusProto;

public final class MyoDeviceListener {
  private MyoDeviceListener() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface Vector3OrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required float x = 1;
    boolean hasX();
    float getX();
    
    // required float y = 2;
    boolean hasY();
    float getY();
    
    // required float z = 3;
    boolean hasZ();
    float getZ();
    
    // required float magnitude = 4;
    boolean hasMagnitude();
    float getMagnitude();
  }
  public static final class Vector3 extends
      com.google.protobuf.GeneratedMessage
      implements Vector3OrBuilder {
    // Use Vector3.newBuilder() to construct.
    private Vector3(Builder builder) {
      super(builder);
    }
    private Vector3(boolean noInit) {}
    
    private static final Vector3 defaultInstance;
    public static Vector3 getDefaultInstance() {
      return defaultInstance;
    }
    
    public Vector3 getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return StrokeGeniusProto.MyoDeviceListener.internal_static_StrokeGeniusProto_Vector3_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return StrokeGeniusProto.MyoDeviceListener.internal_static_StrokeGeniusProto_Vector3_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required float x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public float getX() {
      return x_;
    }
    
    // required float y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getY() {
      return y_;
    }
    
    // required float z = 3;
    public static final int Z_FIELD_NUMBER = 3;
    private float z_;
    public boolean hasZ() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getZ() {
      return z_;
    }
    
    // required float magnitude = 4;
    public static final int MAGNITUDE_FIELD_NUMBER = 4;
    private float magnitude_;
    public boolean hasMagnitude() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public float getMagnitude() {
      return magnitude_;
    }
    
    private void initFields() {
      x_ = 0F;
      y_ = 0F;
      z_ = 0F;
      magnitude_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasZ()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMagnitude()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, z_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, magnitude_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, z_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, magnitude_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static StrokeGeniusProto.MyoDeviceListener.Vector3 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static StrokeGeniusProto.MyoDeviceListener.Vector3 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static StrokeGeniusProto.MyoDeviceListener.Vector3 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static StrokeGeniusProto.MyoDeviceListener.Vector3 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static StrokeGeniusProto.MyoDeviceListener.Vector3 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static StrokeGeniusProto.MyoDeviceListener.Vector3 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static StrokeGeniusProto.MyoDeviceListener.Vector3 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static StrokeGeniusProto.MyoDeviceListener.Vector3 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static StrokeGeniusProto.MyoDeviceListener.Vector3 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static StrokeGeniusProto.MyoDeviceListener.Vector3 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StrokeGeniusProto.MyoDeviceListener.Vector3 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return StrokeGeniusProto.MyoDeviceListener.internal_static_StrokeGeniusProto_Vector3_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return StrokeGeniusProto.MyoDeviceListener.internal_static_StrokeGeniusProto_Vector3_fieldAccessorTable;
      }
      
      // Construct using StrokeGeniusProto.MyoDeviceListener.Vector3.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        z_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        magnitude_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return StrokeGeniusProto.MyoDeviceListener.Vector3.getDescriptor();
      }
      
      public StrokeGeniusProto.MyoDeviceListener.Vector3 getDefaultInstanceForType() {
        return StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance();
      }
      
      public StrokeGeniusProto.MyoDeviceListener.Vector3 build() {
        StrokeGeniusProto.MyoDeviceListener.Vector3 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private StrokeGeniusProto.MyoDeviceListener.Vector3 buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        StrokeGeniusProto.MyoDeviceListener.Vector3 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public StrokeGeniusProto.MyoDeviceListener.Vector3 buildPartial() {
        StrokeGeniusProto.MyoDeviceListener.Vector3 result = new StrokeGeniusProto.MyoDeviceListener.Vector3(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.z_ = z_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.magnitude_ = magnitude_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StrokeGeniusProto.MyoDeviceListener.Vector3) {
          return mergeFrom((StrokeGeniusProto.MyoDeviceListener.Vector3)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(StrokeGeniusProto.MyoDeviceListener.Vector3 other) {
        if (other == StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasZ()) {
          setZ(other.getZ());
        }
        if (other.hasMagnitude()) {
          setMagnitude(other.getMagnitude());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        if (!hasZ()) {
          
          return false;
        }
        if (!hasMagnitude()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              x_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              z_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              magnitude_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required float x = 1;
      private float x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getX() {
        return x_;
      }
      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }
      
      // required float y = 2;
      private float y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getY() {
        return y_;
      }
      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }
      
      // required float z = 3;
      private float z_ ;
      public boolean hasZ() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getZ() {
        return z_;
      }
      public Builder setZ(float value) {
        bitField0_ |= 0x00000004;
        z_ = value;
        onChanged();
        return this;
      }
      public Builder clearZ() {
        bitField0_ = (bitField0_ & ~0x00000004);
        z_ = 0F;
        onChanged();
        return this;
      }
      
      // required float magnitude = 4;
      private float magnitude_ ;
      public boolean hasMagnitude() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getMagnitude() {
        return magnitude_;
      }
      public Builder setMagnitude(float value) {
        bitField0_ |= 0x00000008;
        magnitude_ = value;
        onChanged();
        return this;
      }
      public Builder clearMagnitude() {
        bitField0_ = (bitField0_ & ~0x00000008);
        magnitude_ = 0F;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:StrokeGeniusProto.Vector3)
    }
    
    static {
      defaultInstance = new Vector3(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:StrokeGeniusProto.Vector3)
  }
  
  public interface myoDeviceListenerOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 timeStamp = 1;
    boolean hasTimeStamp();
    int getTimeStamp();
    
    // required .StrokeGeniusProto.Vector3 pose = 2;
    boolean hasPose();
    StrokeGeniusProto.MyoDeviceListener.Vector3 getPose();
    StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder getPoseOrBuilder();
    
    // required .StrokeGeniusProto.Vector3 orientationData = 3;
    boolean hasOrientationData();
    StrokeGeniusProto.MyoDeviceListener.Vector3 getOrientationData();
    StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder getOrientationDataOrBuilder();
    
    // required .StrokeGeniusProto.Vector3 acceleromaterData = 4;
    boolean hasAcceleromaterData();
    StrokeGeniusProto.MyoDeviceListener.Vector3 getAcceleromaterData();
    StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder getAcceleromaterDataOrBuilder();
    
    // required .StrokeGeniusProto.Vector3 gyroscopeData = 5;
    boolean hasGyroscopeData();
    StrokeGeniusProto.MyoDeviceListener.Vector3 getGyroscopeData();
    StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder getGyroscopeDataOrBuilder();
    
    // required int32 rssi = 6;
    boolean hasRssi();
    int getRssi();
    
    // repeated int32 sensorData = 7 [packed = true];
    java.util.List<java.lang.Integer> getSensorDataList();
    int getSensorDataCount();
    int getSensorData(int index);
  }
  public static final class myoDeviceListener extends
      com.google.protobuf.GeneratedMessage
      implements myoDeviceListenerOrBuilder {
    // Use myoDeviceListener.newBuilder() to construct.
    private myoDeviceListener(Builder builder) {
      super(builder);
    }
    private myoDeviceListener(boolean noInit) {}
    
    private static final myoDeviceListener defaultInstance;
    public static myoDeviceListener getDefaultInstance() {
      return defaultInstance;
    }
    
    public myoDeviceListener getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return StrokeGeniusProto.MyoDeviceListener.internal_static_StrokeGeniusProto_myoDeviceListener_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return StrokeGeniusProto.MyoDeviceListener.internal_static_StrokeGeniusProto_myoDeviceListener_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 timeStamp = 1;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private int timeStamp_;
    public boolean hasTimeStamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getTimeStamp() {
      return timeStamp_;
    }
    
    // required .StrokeGeniusProto.Vector3 pose = 2;
    public static final int POSE_FIELD_NUMBER = 2;
    private StrokeGeniusProto.MyoDeviceListener.Vector3 pose_;
    public boolean hasPose() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public StrokeGeniusProto.MyoDeviceListener.Vector3 getPose() {
      return pose_;
    }
    public StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder getPoseOrBuilder() {
      return pose_;
    }
    
    // required .StrokeGeniusProto.Vector3 orientationData = 3;
    public static final int ORIENTATIONDATA_FIELD_NUMBER = 3;
    private StrokeGeniusProto.MyoDeviceListener.Vector3 orientationData_;
    public boolean hasOrientationData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public StrokeGeniusProto.MyoDeviceListener.Vector3 getOrientationData() {
      return orientationData_;
    }
    public StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder getOrientationDataOrBuilder() {
      return orientationData_;
    }
    
    // required .StrokeGeniusProto.Vector3 acceleromaterData = 4;
    public static final int ACCELEROMATERDATA_FIELD_NUMBER = 4;
    private StrokeGeniusProto.MyoDeviceListener.Vector3 acceleromaterData_;
    public boolean hasAcceleromaterData() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public StrokeGeniusProto.MyoDeviceListener.Vector3 getAcceleromaterData() {
      return acceleromaterData_;
    }
    public StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder getAcceleromaterDataOrBuilder() {
      return acceleromaterData_;
    }
    
    // required .StrokeGeniusProto.Vector3 gyroscopeData = 5;
    public static final int GYROSCOPEDATA_FIELD_NUMBER = 5;
    private StrokeGeniusProto.MyoDeviceListener.Vector3 gyroscopeData_;
    public boolean hasGyroscopeData() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public StrokeGeniusProto.MyoDeviceListener.Vector3 getGyroscopeData() {
      return gyroscopeData_;
    }
    public StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder getGyroscopeDataOrBuilder() {
      return gyroscopeData_;
    }
    
    // required int32 rssi = 6;
    public static final int RSSI_FIELD_NUMBER = 6;
    private int rssi_;
    public boolean hasRssi() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getRssi() {
      return rssi_;
    }
    
    // repeated int32 sensorData = 7 [packed = true];
    public static final int SENSORDATA_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> sensorData_;
    public java.util.List<java.lang.Integer>
        getSensorDataList() {
      return sensorData_;
    }
    public int getSensorDataCount() {
      return sensorData_.size();
    }
    public int getSensorData(int index) {
      return sensorData_.get(index);
    }
    private int sensorDataMemoizedSerializedSize = -1;
    
    private void initFields() {
      timeStamp_ = 0;
      pose_ = StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance();
      orientationData_ = StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance();
      acceleromaterData_ = StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance();
      gyroscopeData_ = StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance();
      rssi_ = 0;
      sensorData_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasTimeStamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPose()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOrientationData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAcceleromaterData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGyroscopeData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRssi()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPose().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getOrientationData().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getAcceleromaterData().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getGyroscopeData().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, timeStamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, pose_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, orientationData_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, acceleromaterData_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, gyroscopeData_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, rssi_);
      }
      if (getSensorDataList().size() > 0) {
        output.writeRawVarint32(58);
        output.writeRawVarint32(sensorDataMemoizedSerializedSize);
      }
      for (int i = 0; i < sensorData_.size(); i++) {
        output.writeInt32NoTag(sensorData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, timeStamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, pose_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, orientationData_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, acceleromaterData_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, gyroscopeData_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, rssi_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sensorData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(sensorData_.get(i));
        }
        size += dataSize;
        if (!getSensorDataList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        sensorDataMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static StrokeGeniusProto.MyoDeviceListener.myoDeviceListener parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static StrokeGeniusProto.MyoDeviceListener.myoDeviceListener parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static StrokeGeniusProto.MyoDeviceListener.myoDeviceListener parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static StrokeGeniusProto.MyoDeviceListener.myoDeviceListener parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static StrokeGeniusProto.MyoDeviceListener.myoDeviceListener parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static StrokeGeniusProto.MyoDeviceListener.myoDeviceListener parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static StrokeGeniusProto.MyoDeviceListener.myoDeviceListener parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static StrokeGeniusProto.MyoDeviceListener.myoDeviceListener parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static StrokeGeniusProto.MyoDeviceListener.myoDeviceListener parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static StrokeGeniusProto.MyoDeviceListener.myoDeviceListener parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(StrokeGeniusProto.MyoDeviceListener.myoDeviceListener prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements StrokeGeniusProto.MyoDeviceListener.myoDeviceListenerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return StrokeGeniusProto.MyoDeviceListener.internal_static_StrokeGeniusProto_myoDeviceListener_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return StrokeGeniusProto.MyoDeviceListener.internal_static_StrokeGeniusProto_myoDeviceListener_fieldAccessorTable;
      }
      
      // Construct using StrokeGeniusProto.MyoDeviceListener.myoDeviceListener.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPoseFieldBuilder();
          getOrientationDataFieldBuilder();
          getAcceleromaterDataFieldBuilder();
          getGyroscopeDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        timeStamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (poseBuilder_ == null) {
          pose_ = StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance();
        } else {
          poseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (orientationDataBuilder_ == null) {
          orientationData_ = StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance();
        } else {
          orientationDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (acceleromaterDataBuilder_ == null) {
          acceleromaterData_ = StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance();
        } else {
          acceleromaterDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (gyroscopeDataBuilder_ == null) {
          gyroscopeData_ = StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance();
        } else {
          gyroscopeDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        rssi_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        sensorData_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return StrokeGeniusProto.MyoDeviceListener.myoDeviceListener.getDescriptor();
      }
      
      public StrokeGeniusProto.MyoDeviceListener.myoDeviceListener getDefaultInstanceForType() {
        return StrokeGeniusProto.MyoDeviceListener.myoDeviceListener.getDefaultInstance();
      }
      
      public StrokeGeniusProto.MyoDeviceListener.myoDeviceListener build() {
        StrokeGeniusProto.MyoDeviceListener.myoDeviceListener result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private StrokeGeniusProto.MyoDeviceListener.myoDeviceListener buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        StrokeGeniusProto.MyoDeviceListener.myoDeviceListener result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public StrokeGeniusProto.MyoDeviceListener.myoDeviceListener buildPartial() {
        StrokeGeniusProto.MyoDeviceListener.myoDeviceListener result = new StrokeGeniusProto.MyoDeviceListener.myoDeviceListener(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timeStamp_ = timeStamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (poseBuilder_ == null) {
          result.pose_ = pose_;
        } else {
          result.pose_ = poseBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (orientationDataBuilder_ == null) {
          result.orientationData_ = orientationData_;
        } else {
          result.orientationData_ = orientationDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (acceleromaterDataBuilder_ == null) {
          result.acceleromaterData_ = acceleromaterData_;
        } else {
          result.acceleromaterData_ = acceleromaterDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (gyroscopeDataBuilder_ == null) {
          result.gyroscopeData_ = gyroscopeData_;
        } else {
          result.gyroscopeData_ = gyroscopeDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.rssi_ = rssi_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          sensorData_ = java.util.Collections.unmodifiableList(sensorData_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.sensorData_ = sensorData_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof StrokeGeniusProto.MyoDeviceListener.myoDeviceListener) {
          return mergeFrom((StrokeGeniusProto.MyoDeviceListener.myoDeviceListener)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(StrokeGeniusProto.MyoDeviceListener.myoDeviceListener other) {
        if (other == StrokeGeniusProto.MyoDeviceListener.myoDeviceListener.getDefaultInstance()) return this;
        if (other.hasTimeStamp()) {
          setTimeStamp(other.getTimeStamp());
        }
        if (other.hasPose()) {
          mergePose(other.getPose());
        }
        if (other.hasOrientationData()) {
          mergeOrientationData(other.getOrientationData());
        }
        if (other.hasAcceleromaterData()) {
          mergeAcceleromaterData(other.getAcceleromaterData());
        }
        if (other.hasGyroscopeData()) {
          mergeGyroscopeData(other.getGyroscopeData());
        }
        if (other.hasRssi()) {
          setRssi(other.getRssi());
        }
        if (!other.sensorData_.isEmpty()) {
          if (sensorData_.isEmpty()) {
            sensorData_ = other.sensorData_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureSensorDataIsMutable();
            sensorData_.addAll(other.sensorData_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasTimeStamp()) {
          
          return false;
        }
        if (!hasPose()) {
          
          return false;
        }
        if (!hasOrientationData()) {
          
          return false;
        }
        if (!hasAcceleromaterData()) {
          
          return false;
        }
        if (!hasGyroscopeData()) {
          
          return false;
        }
        if (!hasRssi()) {
          
          return false;
        }
        if (!getPose().isInitialized()) {
          
          return false;
        }
        if (!getOrientationData().isInitialized()) {
          
          return false;
        }
        if (!getAcceleromaterData().isInitialized()) {
          
          return false;
        }
        if (!getGyroscopeData().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              timeStamp_ = input.readInt32();
              break;
            }
            case 18: {
              StrokeGeniusProto.MyoDeviceListener.Vector3.Builder subBuilder = StrokeGeniusProto.MyoDeviceListener.Vector3.newBuilder();
              if (hasPose()) {
                subBuilder.mergeFrom(getPose());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPose(subBuilder.buildPartial());
              break;
            }
            case 26: {
              StrokeGeniusProto.MyoDeviceListener.Vector3.Builder subBuilder = StrokeGeniusProto.MyoDeviceListener.Vector3.newBuilder();
              if (hasOrientationData()) {
                subBuilder.mergeFrom(getOrientationData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setOrientationData(subBuilder.buildPartial());
              break;
            }
            case 34: {
              StrokeGeniusProto.MyoDeviceListener.Vector3.Builder subBuilder = StrokeGeniusProto.MyoDeviceListener.Vector3.newBuilder();
              if (hasAcceleromaterData()) {
                subBuilder.mergeFrom(getAcceleromaterData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAcceleromaterData(subBuilder.buildPartial());
              break;
            }
            case 42: {
              StrokeGeniusProto.MyoDeviceListener.Vector3.Builder subBuilder = StrokeGeniusProto.MyoDeviceListener.Vector3.newBuilder();
              if (hasGyroscopeData()) {
                subBuilder.mergeFrom(getGyroscopeData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGyroscopeData(subBuilder.buildPartial());
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              rssi_ = input.readInt32();
              break;
            }
            case 56: {
              ensureSensorDataIsMutable();
              sensorData_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSensorData(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 timeStamp = 1;
      private int timeStamp_ ;
      public boolean hasTimeStamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getTimeStamp() {
        return timeStamp_;
      }
      public Builder setTimeStamp(int value) {
        bitField0_ |= 0x00000001;
        timeStamp_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimeStamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timeStamp_ = 0;
        onChanged();
        return this;
      }
      
      // required .StrokeGeniusProto.Vector3 pose = 2;
      private StrokeGeniusProto.MyoDeviceListener.Vector3 pose_ = StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          StrokeGeniusProto.MyoDeviceListener.Vector3, StrokeGeniusProto.MyoDeviceListener.Vector3.Builder, StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder> poseBuilder_;
      public boolean hasPose() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public StrokeGeniusProto.MyoDeviceListener.Vector3 getPose() {
        if (poseBuilder_ == null) {
          return pose_;
        } else {
          return poseBuilder_.getMessage();
        }
      }
      public Builder setPose(StrokeGeniusProto.MyoDeviceListener.Vector3 value) {
        if (poseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pose_ = value;
          onChanged();
        } else {
          poseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setPose(
          StrokeGeniusProto.MyoDeviceListener.Vector3.Builder builderForValue) {
        if (poseBuilder_ == null) {
          pose_ = builderForValue.build();
          onChanged();
        } else {
          poseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergePose(StrokeGeniusProto.MyoDeviceListener.Vector3 value) {
        if (poseBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              pose_ != StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance()) {
            pose_ =
              StrokeGeniusProto.MyoDeviceListener.Vector3.newBuilder(pose_).mergeFrom(value).buildPartial();
          } else {
            pose_ = value;
          }
          onChanged();
        } else {
          poseBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearPose() {
        if (poseBuilder_ == null) {
          pose_ = StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance();
          onChanged();
        } else {
          poseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public StrokeGeniusProto.MyoDeviceListener.Vector3.Builder getPoseBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPoseFieldBuilder().getBuilder();
      }
      public StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder getPoseOrBuilder() {
        if (poseBuilder_ != null) {
          return poseBuilder_.getMessageOrBuilder();
        } else {
          return pose_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          StrokeGeniusProto.MyoDeviceListener.Vector3, StrokeGeniusProto.MyoDeviceListener.Vector3.Builder, StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder> 
          getPoseFieldBuilder() {
        if (poseBuilder_ == null) {
          poseBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              StrokeGeniusProto.MyoDeviceListener.Vector3, StrokeGeniusProto.MyoDeviceListener.Vector3.Builder, StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder>(
                  pose_,
                  getParentForChildren(),
                  isClean());
          pose_ = null;
        }
        return poseBuilder_;
      }
      
      // required .StrokeGeniusProto.Vector3 orientationData = 3;
      private StrokeGeniusProto.MyoDeviceListener.Vector3 orientationData_ = StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          StrokeGeniusProto.MyoDeviceListener.Vector3, StrokeGeniusProto.MyoDeviceListener.Vector3.Builder, StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder> orientationDataBuilder_;
      public boolean hasOrientationData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public StrokeGeniusProto.MyoDeviceListener.Vector3 getOrientationData() {
        if (orientationDataBuilder_ == null) {
          return orientationData_;
        } else {
          return orientationDataBuilder_.getMessage();
        }
      }
      public Builder setOrientationData(StrokeGeniusProto.MyoDeviceListener.Vector3 value) {
        if (orientationDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          orientationData_ = value;
          onChanged();
        } else {
          orientationDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setOrientationData(
          StrokeGeniusProto.MyoDeviceListener.Vector3.Builder builderForValue) {
        if (orientationDataBuilder_ == null) {
          orientationData_ = builderForValue.build();
          onChanged();
        } else {
          orientationDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeOrientationData(StrokeGeniusProto.MyoDeviceListener.Vector3 value) {
        if (orientationDataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              orientationData_ != StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance()) {
            orientationData_ =
              StrokeGeniusProto.MyoDeviceListener.Vector3.newBuilder(orientationData_).mergeFrom(value).buildPartial();
          } else {
            orientationData_ = value;
          }
          onChanged();
        } else {
          orientationDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearOrientationData() {
        if (orientationDataBuilder_ == null) {
          orientationData_ = StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance();
          onChanged();
        } else {
          orientationDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public StrokeGeniusProto.MyoDeviceListener.Vector3.Builder getOrientationDataBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getOrientationDataFieldBuilder().getBuilder();
      }
      public StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder getOrientationDataOrBuilder() {
        if (orientationDataBuilder_ != null) {
          return orientationDataBuilder_.getMessageOrBuilder();
        } else {
          return orientationData_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          StrokeGeniusProto.MyoDeviceListener.Vector3, StrokeGeniusProto.MyoDeviceListener.Vector3.Builder, StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder> 
          getOrientationDataFieldBuilder() {
        if (orientationDataBuilder_ == null) {
          orientationDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              StrokeGeniusProto.MyoDeviceListener.Vector3, StrokeGeniusProto.MyoDeviceListener.Vector3.Builder, StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder>(
                  orientationData_,
                  getParentForChildren(),
                  isClean());
          orientationData_ = null;
        }
        return orientationDataBuilder_;
      }
      
      // required .StrokeGeniusProto.Vector3 acceleromaterData = 4;
      private StrokeGeniusProto.MyoDeviceListener.Vector3 acceleromaterData_ = StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          StrokeGeniusProto.MyoDeviceListener.Vector3, StrokeGeniusProto.MyoDeviceListener.Vector3.Builder, StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder> acceleromaterDataBuilder_;
      public boolean hasAcceleromaterData() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public StrokeGeniusProto.MyoDeviceListener.Vector3 getAcceleromaterData() {
        if (acceleromaterDataBuilder_ == null) {
          return acceleromaterData_;
        } else {
          return acceleromaterDataBuilder_.getMessage();
        }
      }
      public Builder setAcceleromaterData(StrokeGeniusProto.MyoDeviceListener.Vector3 value) {
        if (acceleromaterDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          acceleromaterData_ = value;
          onChanged();
        } else {
          acceleromaterDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setAcceleromaterData(
          StrokeGeniusProto.MyoDeviceListener.Vector3.Builder builderForValue) {
        if (acceleromaterDataBuilder_ == null) {
          acceleromaterData_ = builderForValue.build();
          onChanged();
        } else {
          acceleromaterDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeAcceleromaterData(StrokeGeniusProto.MyoDeviceListener.Vector3 value) {
        if (acceleromaterDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              acceleromaterData_ != StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance()) {
            acceleromaterData_ =
              StrokeGeniusProto.MyoDeviceListener.Vector3.newBuilder(acceleromaterData_).mergeFrom(value).buildPartial();
          } else {
            acceleromaterData_ = value;
          }
          onChanged();
        } else {
          acceleromaterDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearAcceleromaterData() {
        if (acceleromaterDataBuilder_ == null) {
          acceleromaterData_ = StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance();
          onChanged();
        } else {
          acceleromaterDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public StrokeGeniusProto.MyoDeviceListener.Vector3.Builder getAcceleromaterDataBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getAcceleromaterDataFieldBuilder().getBuilder();
      }
      public StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder getAcceleromaterDataOrBuilder() {
        if (acceleromaterDataBuilder_ != null) {
          return acceleromaterDataBuilder_.getMessageOrBuilder();
        } else {
          return acceleromaterData_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          StrokeGeniusProto.MyoDeviceListener.Vector3, StrokeGeniusProto.MyoDeviceListener.Vector3.Builder, StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder> 
          getAcceleromaterDataFieldBuilder() {
        if (acceleromaterDataBuilder_ == null) {
          acceleromaterDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              StrokeGeniusProto.MyoDeviceListener.Vector3, StrokeGeniusProto.MyoDeviceListener.Vector3.Builder, StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder>(
                  acceleromaterData_,
                  getParentForChildren(),
                  isClean());
          acceleromaterData_ = null;
        }
        return acceleromaterDataBuilder_;
      }
      
      // required .StrokeGeniusProto.Vector3 gyroscopeData = 5;
      private StrokeGeniusProto.MyoDeviceListener.Vector3 gyroscopeData_ = StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          StrokeGeniusProto.MyoDeviceListener.Vector3, StrokeGeniusProto.MyoDeviceListener.Vector3.Builder, StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder> gyroscopeDataBuilder_;
      public boolean hasGyroscopeData() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public StrokeGeniusProto.MyoDeviceListener.Vector3 getGyroscopeData() {
        if (gyroscopeDataBuilder_ == null) {
          return gyroscopeData_;
        } else {
          return gyroscopeDataBuilder_.getMessage();
        }
      }
      public Builder setGyroscopeData(StrokeGeniusProto.MyoDeviceListener.Vector3 value) {
        if (gyroscopeDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gyroscopeData_ = value;
          onChanged();
        } else {
          gyroscopeDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setGyroscopeData(
          StrokeGeniusProto.MyoDeviceListener.Vector3.Builder builderForValue) {
        if (gyroscopeDataBuilder_ == null) {
          gyroscopeData_ = builderForValue.build();
          onChanged();
        } else {
          gyroscopeDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeGyroscopeData(StrokeGeniusProto.MyoDeviceListener.Vector3 value) {
        if (gyroscopeDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              gyroscopeData_ != StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance()) {
            gyroscopeData_ =
              StrokeGeniusProto.MyoDeviceListener.Vector3.newBuilder(gyroscopeData_).mergeFrom(value).buildPartial();
          } else {
            gyroscopeData_ = value;
          }
          onChanged();
        } else {
          gyroscopeDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearGyroscopeData() {
        if (gyroscopeDataBuilder_ == null) {
          gyroscopeData_ = StrokeGeniusProto.MyoDeviceListener.Vector3.getDefaultInstance();
          onChanged();
        } else {
          gyroscopeDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      public StrokeGeniusProto.MyoDeviceListener.Vector3.Builder getGyroscopeDataBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getGyroscopeDataFieldBuilder().getBuilder();
      }
      public StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder getGyroscopeDataOrBuilder() {
        if (gyroscopeDataBuilder_ != null) {
          return gyroscopeDataBuilder_.getMessageOrBuilder();
        } else {
          return gyroscopeData_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          StrokeGeniusProto.MyoDeviceListener.Vector3, StrokeGeniusProto.MyoDeviceListener.Vector3.Builder, StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder> 
          getGyroscopeDataFieldBuilder() {
        if (gyroscopeDataBuilder_ == null) {
          gyroscopeDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              StrokeGeniusProto.MyoDeviceListener.Vector3, StrokeGeniusProto.MyoDeviceListener.Vector3.Builder, StrokeGeniusProto.MyoDeviceListener.Vector3OrBuilder>(
                  gyroscopeData_,
                  getParentForChildren(),
                  isClean());
          gyroscopeData_ = null;
        }
        return gyroscopeDataBuilder_;
      }
      
      // required int32 rssi = 6;
      private int rssi_ ;
      public boolean hasRssi() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getRssi() {
        return rssi_;
      }
      public Builder setRssi(int value) {
        bitField0_ |= 0x00000020;
        rssi_ = value;
        onChanged();
        return this;
      }
      public Builder clearRssi() {
        bitField0_ = (bitField0_ & ~0x00000020);
        rssi_ = 0;
        onChanged();
        return this;
      }
      
      // repeated int32 sensorData = 7 [packed = true];
      private java.util.List<java.lang.Integer> sensorData_ = java.util.Collections.emptyList();;
      private void ensureSensorDataIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          sensorData_ = new java.util.ArrayList<java.lang.Integer>(sensorData_);
          bitField0_ |= 0x00000040;
         }
      }
      public java.util.List<java.lang.Integer>
          getSensorDataList() {
        return java.util.Collections.unmodifiableList(sensorData_);
      }
      public int getSensorDataCount() {
        return sensorData_.size();
      }
      public int getSensorData(int index) {
        return sensorData_.get(index);
      }
      public Builder setSensorData(
          int index, int value) {
        ensureSensorDataIsMutable();
        sensorData_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSensorData(int value) {
        ensureSensorDataIsMutable();
        sensorData_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSensorData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSensorDataIsMutable();
        super.addAll(values, sensorData_);
        onChanged();
        return this;
      }
      public Builder clearSensorData() {
        sensorData_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:StrokeGeniusProto.myoDeviceListener)
    }
    
    static {
      defaultInstance = new myoDeviceListener(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:StrokeGeniusProto.myoDeviceListener)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_StrokeGeniusProto_Vector3_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_StrokeGeniusProto_Vector3_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_StrokeGeniusProto_myoDeviceListener_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_StrokeGeniusProto_myoDeviceListener_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027MyoDeviceListener.proto\022\021StrokeGeniusP" +
      "roto\"=\n\007Vector3\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030\002 \002(\002\022\t\n" +
      "\001z\030\003 \002(\002\022\021\n\tmagnitude\030\004 \002(\002\"\225\002\n\021myoDevic" +
      "eListener\022\021\n\ttimeStamp\030\001 \002(\005\022(\n\004pose\030\002 \002" +
      "(\0132\032.StrokeGeniusProto.Vector3\0223\n\017orient" +
      "ationData\030\003 \002(\0132\032.StrokeGeniusProto.Vect" +
      "or3\0225\n\021acceleromaterData\030\004 \002(\0132\032.StrokeG" +
      "eniusProto.Vector3\0221\n\rgyroscopeData\030\005 \002(" +
      "\0132\032.StrokeGeniusProto.Vector3\022\014\n\004rssi\030\006 " +
      "\002(\005\022\026\n\nsensorData\030\007 \003(\005B\002\020\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_StrokeGeniusProto_Vector3_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_StrokeGeniusProto_Vector3_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_StrokeGeniusProto_Vector3_descriptor,
              new java.lang.String[] { "X", "Y", "Z", "Magnitude", },
              StrokeGeniusProto.MyoDeviceListener.Vector3.class,
              StrokeGeniusProto.MyoDeviceListener.Vector3.Builder.class);
          internal_static_StrokeGeniusProto_myoDeviceListener_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_StrokeGeniusProto_myoDeviceListener_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_StrokeGeniusProto_myoDeviceListener_descriptor,
              new java.lang.String[] { "TimeStamp", "Pose", "OrientationData", "AcceleromaterData", "GyroscopeData", "Rssi", "SensorData", },
              StrokeGeniusProto.MyoDeviceListener.myoDeviceListener.class,
              StrokeGeniusProto.MyoDeviceListener.myoDeviceListener.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
